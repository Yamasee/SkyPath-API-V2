openapi: 3.0.0
info:
  version: 1.1.4
  title: Yamasee Skypath - Turbulence and Weather Management in Commercial Aviation - API documentation
  description: |
    Skypath by Yamasee Inc is a unique service that can help airline pilots avoid clear air 
    turbulence. This is the API documentation for interacting with the Skypath server 
    for application developers. It describes the Skypath turbulence avoidance server 
    Rest API in OpenAPI 3.0 specification. 
    You will need a partner API_KEY to be able to login to the system and get authentication 
    tokens valid for the different REST operations
  termsOfService: 'https://yamasee.global/terms/'
  contact:
    name: Skypath API Team
    email: info@yamasee.global
    url: 'https://api.skypath.app'
  license:
    name: Apache 2.0
    url: 'https://www.apache.org/licenses/LICENSE-2.0.html'
  x-logo:
    url: 'https://api.skypath.app/skypath-logo.png'
    backgroundColor: '#FFFFFF'
    altText: Skypath logo
servers:
  - url: 'https://devserver.yamasee-skypath.com'
    description: Development Server
  - url: 'https://server.yamasee-skypath.com'
    description: Production Server
tags:
  - name: registration
    description: These routes are public and return user information for new users
  - name: general
    description: These routes are public and return general information about the system like supported aircraft types and server / client recommended versions
  - name: auth
    description: 'These routes allow authentication, Login with API key, Refresh JWT tokens'
  - name: settings
    description: These routes allow getting the user recommended settings
  - name: static_content
    description: These routes allow getting and updating system wide static content like airports and FIR data
  - name: map
    description: These routes deal with getting and updating the logical map view of aircraft positions and turbulence reports
  - name: raw_data
    description: These routes allow getting and updating raw data from devices and metadata entries
  - name: proxy
    description: Proxy endpoint for other domains
  - name: edr
    description: Edr
paths:
  /v2/raw-data/sensor-data:
    post:
      operationId: raw-data-sensor-data
      description: Upload file with raw data from device to S3 bucket and save meta data in db
      parameters:
        - in: header
          name: X-Skypath-SDK
          required: false
          schema:
            type: string
          description: Version of sdk
        - in: header
          name: X-Skypath-App
          required: false
          schema:
            type: string
          description: Version of application
      security:
        - bearerAuth: []
      tags:
        - raw_data
      requestBody:
        description: Options for request
        content:
          multipart/form-data:
            schema:
              description: Actual file upload
              properties:
                file:
                  type: string
                  format: binary
                metadata:
                  type: object
                  properties:
                    start_ts:
                      type: number
                    end_ts:
                      type: number
                    flight_num:
                      type: string
                    label:
                      type: string
                    user_response:
                      type: object
                      properties:
                        confirmed:
                          type: boolean
                        suggested_level:
                          type: number
                  example:
                    start_ts: 1607525039
                    end_ts: 1607525039
                    flight_num: '123'
                    label: event
                    user_response:
                      confirmed: true
                      suggested_level: 2
      responses:
        '200':
          description: Raw data successfully created
          content:
            application/json:
              schema:
                type: object
                properties:
                  _id:
                    type: string
                    example: 5fd26ee27e6055034d8ae13d
                  uuid:
                    type: string
                    example: b553d55f-a94d-4df6-b04b-393f6fb0e08c
                  user_id:
                    type: string
                    example: userId
                  url:
                    type: string
                    example: '{server-url}/v2/raw-data/sensor_data/b553d55f-a94d-4df6-b04b-393f6fb0e08c'
                  uploaded:
                    type: number
                    example: 1607626466074
                  metadata:
                    $ref: '#/paths/~1v2~1raw-data~1sensor-data/post/requestBody/content/multipart~1form-data/schema/properties/metadata'
                    x-miro: 'd:/yamasee_projects/SkyPath-API/spec/types/metadata.type.yml#/Metadata'
        '401':
          description: User unauthorized to see settings
          content:
            application/json:
              schema:
                type: object
                required:
                  - message
                properties:
                  code:
                    type: integer
                    format: int32
                  message:
                    type: string
  '/v2/raw-data/sensor-data/{id}':
    get:
      operationId: raw-data-sensor-data-by-id
      description: Return uploaded raw data sensor data file from S3
      security:
        - bearerAuth: []
      parameters:
        - $ref: '#/paths/~1v2~1raw-data~1sensor-data/post/parameters/0'
          x-miro: 'd:/yamasee_projects/SkyPath-API/spec/core/headers.yml#/skypathSDK'
        - $ref: '#/paths/~1v2~1raw-data~1sensor-data/post/parameters/1'
          x-miro: 'd:/yamasee_projects/SkyPath-API/spec/core/headers.yml#/skypathApp'
        - in: path
          name: id
          required: true
          schema:
            type: string
            format: uuid
          description: The raw-data-sensor-data ID
          example: edfa48d2-06e0-4bce-8c94-fd7147d9cac6
      tags:
        - raw_data
      responses:
        '200':
          description: OK - get file
        '401':
          $ref: '#/paths/~1v2~1raw-data~1sensor-data/post/responses/401'
          x-miro: 'd:/yamasee_projects/SkyPath-API/spec/responses.yml#/UnauthorizedSettings'
        '404':
          description: Requested resource not found
          content:
            application/json:
              schema:
                type: object
                required:
                  - message
                properties:
                  code:
                    type: integer
                    format: int32
                  message:
                    type: string
  /v2/raw-data/metadata:
    get:
      operationId: raw-data-metadata
      description: Get metadata. Use parameters to specify results
      security:
        - bearerAuth: []
      tags:
        - raw_data
      parameters:
        - $ref: '#/paths/~1v2~1raw-data~1sensor-data/post/parameters/0'
          x-miro: 'd:/yamasee_projects/SkyPath-API/spec/core/headers.yml#/skypathSDK'
        - $ref: '#/paths/~1v2~1raw-data~1sensor-data/post/parameters/1'
          x-miro: 'd:/yamasee_projects/SkyPath-API/spec/core/headers.yml#/skypathApp'
        - in: query
          name: limit
          schema:
            type: number
            default: 0
        - in: query
          name: page
          schema:
            type: number
            default: 1
        - in: query
          name: user_id
          schema:
            type: string
          description: Return files created by provided user
        - in: query
          name: from_date
          schema:
            type: number
          description: Return files created after provided timestamp
        - in: query
          name: to_date
          schema:
            type: number
          description: Return files created before provided timestamp
        - in: query
          name: start_ts
          schema:
            type: number
          description: Return files with start_ts after provided timestamp
        - in: query
          name: end_ts
          schema:
            type: number
          description: Return files with end_ts before provided timestamp
        - in: query
          name: label
          schema:
            type: string
          description: Free text search on label property
        - in: query
          name: flight_num
          schema:
            type: string
          description: Return metadata for specific flight number
      responses:
        '200':
          description: Metadata objects with pagination properties
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        _id:
                          type: string
                          example: 5fd26ee27e6055034d8ae13d
                        uuid:
                          type: string
                          example: b553d55f-a94d-4df6-b04b-393f6fb0e08c
                        user_id:
                          type: string
                          example: userId
                        url:
                          type: string
                          example: '{server-url}/v2/raw-data/sensor_data/b553d55f-a94d-4df6-b04b-393f6fb0e08c'
                        uploaded:
                          type: number
                          example: 1607626466074
                        metadata:
                          $ref: '#/paths/~1v2~1raw-data~1sensor-data/post/requestBody/content/multipart~1form-data/schema/properties/metadata'
                          x-miro: 'd:/yamasee_projects/SkyPath-API/spec/types/metadata.type.yml#/Metadata'
                  totalPages:
                    type: number
                  currentPage:
                    type: number
        '401':
          $ref: '#/paths/~1v2~1raw-data~1sensor-data/post/responses/401'
          x-miro: 'd:/yamasee_projects/SkyPath-API/spec/responses.yml#/UnauthorizedSettings'
        '404':
          $ref: '#/paths/~1v2~1raw-data~1sensor-data~1%7Bid%7D/get/responses/404'
          x-miro: 'd:/yamasee_projects/SkyPath-API/spec/responses.yml#/NotFound'
  '/v2/raw-data/metadata/{id}':
    get:
      operationId: raw-data-metadata-by-id
      description: Get metadata by id
      security:
        - bearerAuth: []
      tags:
        - raw_data
      parameters:
        - $ref: '#/paths/~1v2~1raw-data~1sensor-data/post/parameters/0'
          x-miro: 'd:/yamasee_projects/SkyPath-API/spec/core/headers.yml#/skypathSDK'
        - $ref: '#/paths/~1v2~1raw-data~1sensor-data/post/parameters/1'
          x-miro: 'd:/yamasee_projects/SkyPath-API/spec/core/headers.yml#/skypathApp'
        - in: path
          name: id
          required: true
          schema:
            type: string
            format: uuid
          description: The raw-data-metadata ID
      responses:
        '200':
          description: Metadata object
          content:
            application/json:
              schema:
                type: object
                properties:
                  _id:
                    type: string
                    example: 5fd26ee27e6055034d8ae13d
                  uuid:
                    type: string
                    example: b553d55f-a94d-4df6-b04b-393f6fb0e08c
                  user_id:
                    type: string
                    example: userId
                  url:
                    type: string
                    example: '{server-url}/v2/raw-data/sensor_data/b553d55f-a94d-4df6-b04b-393f6fb0e08c'
                  uploaded:
                    type: number
                    example: 1607626466074
                  metadata:
                    $ref: '#/paths/~1v2~1raw-data~1sensor-data/post/requestBody/content/multipart~1form-data/schema/properties/metadata'
                    x-miro: 'd:/yamasee_projects/SkyPath-API/spec/types/metadata.type.yml#/Metadata'
        '401':
          $ref: '#/paths/~1v2~1raw-data~1sensor-data/post/responses/401'
          x-miro: 'd:/yamasee_projects/SkyPath-API/spec/responses.yml#/UnauthorizedSettings'
        '404':
          $ref: '#/paths/~1v2~1raw-data~1sensor-data~1%7Bid%7D/get/responses/404'
          x-miro: 'd:/yamasee_projects/SkyPath-API/spec/responses.yml#/NotFound'
  /v2/edr/stats:
    get:
      operationId: edr
      description: Get edr stats for last 24h and 1h
      tags:
        - edr
      parameters:
        - $ref: '#/paths/~1v2~1raw-data~1sensor-data/post/parameters/0'
          x-miro: 'd:/yamasee_projects/SkyPath-API/spec/core/headers.yml#/skypathSDK'
        - $ref: '#/paths/~1v2~1raw-data~1sensor-data/post/parameters/1'
          x-miro: 'd:/yamasee_projects/SkyPath-API/spec/core/headers.yml#/skypathApp'
      responses:
        '200':
          description: Edr data stats
          content:
            application/json:
              schema:
                type: object
                properties:
                  timeStamp:
                    type: number
                    example: 1607668194
                  24h:
                    type: number
                    example: 5000
                  1h:
                    type: number
                    example: 100
        '401':
          $ref: '#/paths/~1v2~1raw-data~1sensor-data/post/responses/401'
          x-miro: 'd:/yamasee_projects/SkyPath-API/spec/responses.yml#/UnauthorizedSettings'
        '404':
          $ref: '#/paths/~1v2~1raw-data~1sensor-data~1%7Bid%7D/get/responses/404'
          x-miro: 'd:/yamasee_projects/SkyPath-API/spec/responses.yml#/NotFound'
  /v2/proxy:
    post:
      operationId: proxy
      description: Proxy to specified url
      parameters:
        - in: header
          name: X-Skypath-SDK
          required: false
          schema:
            type: string
          description: Version of sdk
        - in: header
          name: X-Skypath-App
          required: false
          schema:
            type: string
          description: Version of application
      security:
        - bearerAuth: []
      tags:
        - proxy
      requestBody:
        description: Options for request
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProxyRequest'
      responses:
        '200':
          description: OK - proxy success
        '401':
          description: User unauthorized to see settings
          content:
            application/json:
              schema:
                type: object
                required:
                  - message
                properties:
                  code:
                    type: integer
                    format: int32
                  message:
                    type: string
  '/v2/static_content/{unique_id}/{sha1}':
    post:
      operationId: create_static_content
      description: Create Static content by uploading a file
      parameters:
        - $ref: '#/paths/~1v2~1proxy/post/parameters/0'
          x-miro: ./core/headers.yml#/skypathSDK
        - $ref: '#/paths/~1v2~1proxy/post/parameters/1'
          x-miro: ./core/headers.yml#/skypathApp
      security:
        - bearerAuth: []
      tags:
        - static_content
      requestBody:
        description: The user contact request
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CreateStaticContentRequest'
      responses:
        '200':
          description: OK - content created
        '401':
          $ref: '#/paths/~1v2~1proxy/post/responses/401'
          x-miro: responses.yml#/UnauthorizedSettings
  /v2/static_contents:
    get:
      operationId: list_static_contents
      description: Return a list of available static content
      parameters:
        - $ref: '#/paths/~1v2~1proxy/post/parameters/0'
          x-miro: ./core/headers.yml#/skypathSDK
        - $ref: '#/paths/~1v2~1proxy/post/parameters/1'
          x-miro: ./core/headers.yml#/skypathApp
      security:
        - bearerAuth: []
      tags:
        - static_content
      responses:
        '200':
          description: A valid list of static content
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    uid:
                      type: string
                    sha1:
                      type: string
                    version:
                      type: number
                    uploaded:
                      type: number
                example:
                  - uid: airports_list
                    sha1: ee03bb8fcc77500004154d3c75a8f17db126e549
                    version: 1
                    uploaded: 1600802938479
                  - uid: fir_borders_list
                    sha1: aa99bb8fcc77500004154d3c75a8f17db126e543
                    version: 2
                    uploaded: 1600802936002
        '401':
          $ref: '#/paths/~1v2~1proxy/post/responses/401'
          x-miro: responses.yml#/UnauthorizedSettings
  '/v2/static_content/{uid}':
    get:
      operationId: get_static_content
      description: Return the actual static content file
      security:
        - bearerAuth: []
      parameters:
        - $ref: '#/paths/~1v2~1proxy/post/parameters/0'
          x-miro: ./core/headers.yml#/skypathSDK
        - $ref: '#/paths/~1v2~1proxy/post/parameters/1'
          x-miro: ./core/headers.yml#/skypathApp
      tags:
        - static_content
      responses:
        '200':
          description: The static contents
          content:
            application/json:
              schema:
                type: string
                format: binary
        '401':
          $ref: '#/paths/~1v2~1proxy/post/responses/401'
          x-miro: responses.yml#/UnauthorizedSettings
  /v2/contact:
    post:
      operationId: contact
      description: Used to send user contact us / feedback form
      parameters:
        - $ref: '#/paths/~1v2~1proxy/post/parameters/0'
          x-miro: ./core/headers.yml#/skypathSDK
        - $ref: '#/paths/~1v2~1proxy/post/parameters/1'
          x-miro: ./core/headers.yml#/skypathApp
      tags:
        - general
      requestBody:
        description: The user contact request
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ContactRequest'
      responses:
        '200':
          description: OK - message sent
  /v2/forgot_password:
    post:
      operationId: forgot_password
      description: Used to request a password reset link for a user
      parameters:
        - $ref: '#/paths/~1v2~1proxy/post/parameters/0'
          x-miro: ./core/headers.yml#/skypathSDK
        - $ref: '#/paths/~1v2~1proxy/post/parameters/1'
          x-miro: ./core/headers.yml#/skypathApp
      tags:
        - auth
      requestBody:
        description: User id param
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ForgotPasswordRequest'
      responses:
        '200':
          description: OK - Password reset link was sent to registered email
        '404':
          description: Requested resource not found
          content:
            application/json:
              schema:
                type: object
                required:
                  - message
                properties:
                  code:
                    type: integer
                    format: int32
                  message:
                    type: string
  /v2/set_user_profile:
    post:
      tags:
        - registration
      operationId: set_user_profile
      description: |
        Client can set user profile like password and other future properties for non init users, 
        if user is not a new user the operation will fail with not authorized code.
      parameters:
        - $ref: '#/paths/~1v2~1proxy/post/parameters/0'
          x-miro: ./core/headers.yml#/skypathSDK
        - $ref: '#/paths/~1v2~1proxy/post/parameters/1'
          x-miro: ./core/headers.yml#/skypathApp
      requestBody:
        description: User profile params
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserProfileUpdateRequest'
      responses:
        '200':
          description: OK - Updates were recived by the server
        '401':
          description: User is not a fresh user so can't write to it's profile without auth
          content:
            application/json:
              schema:
                type: object
                required:
                  - message
                properties:
                  code:
                    type: integer
                    format: int32
                  message:
                    type: string
        '404':
          $ref: '#/paths/~1v2~1forgot_password/post/responses/404'
          x-miro: responses.yml#/UserNotFound
        '500':
          description: 'Internal server error, see message and code for more info'
          content:
            application/json:
              schema:
                type: object
                required:
                  - message
                properties:
                  code:
                    type: integer
                    format: int32
                  message:
                    type: string
  /v2/aircraft_types:
    get:
      operationId: aircraft_types
      description: Returns a list of system supported aircraft types
      parameters:
        - $ref: '#/paths/~1v2~1proxy/post/parameters/0'
          x-miro: ./core/headers.yml#/skypathSDK
        - $ref: '#/paths/~1v2~1proxy/post/parameters/1'
          x-miro: ./core/headers.yml#/skypathApp
      tags:
        - general
      responses:
        '200':
          description: A valid list of system supported aircraft types
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                    title:
                      type: string
                example:
                  - id: '737'
                    title: Boeing 737
                  - id: '747'
                    title: Boeing 747
                  - id: A320
                    title: AirBus 320
  /v2/settings:
    get:
      operationId: settings
      description: Get the initial recommended settings for this user
      parameters:
        - $ref: '#/paths/~1v2~1proxy/post/parameters/0'
          x-miro: ./core/headers.yml#/skypathSDK
        - $ref: '#/paths/~1v2~1proxy/post/parameters/1'
          x-miro: ./core/headers.yml#/skypathApp
      tags:
        - settings
      security:
        - bearerAuth: []
      responses:
        '200':
          description: An object with the user's settings for each module
          content:
            application/json:
              schema:
                type: object
                properties:
                  modules:
                    type: object
                example:
                  modules:
                    module_a:
                      property_a: x1
                      size: 8
                    module_b:
                      property_a: 2
                      ability: 67
        '401':
          $ref: '#/paths/~1v2~1proxy/post/responses/401'
          x-miro: responses.yml#/UnauthorizedSettings
        '404':
          description: Requested resource not found
          content:
            application/json:
              schema:
                type: object
                required:
                  - message
                properties:
                  code:
                    type: integer
                    format: int32
                  message:
                    type: string
  /v2/hello:
    get:
      tags:
        - general
      operationId: hello
      description: |
        Gets basic information about Skypath server version and minimal client version needed, 
        if the app version is lower than the minimal allowed app version the client needs to
        block logging-in and suggest the user to upgrade the Skypath app version on the device.
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                required:
                  - ver
                  - current_app_version
                  - minimal_compatible_app_version
                properties:
                  ver:
                    description: current server version
                    example: 1.2.4
                    type: string
                  current_app_version:
                    description: current app client version
                    example: 4.0.0
                    type: string
                  minimal_compatible_app_version:
                    description: current minimal supported app or client version
                    example: 3.5.1
                    type: string
  /v2/login:
    post:
      tags:
        - auth
      operationId: login
      description: |
        Login to the server and get a authorization JWT token, this allows user to 
        exchange their username / email and password for a JWT token which can be user in 
        further requests. All requests that need this token are marked as such in this
        documentation
      parameters:
        - $ref: '#/paths/~1v2~1proxy/post/parameters/0'
          x-miro: ./core/headers.yml#/skypathSDK
        - $ref: '#/paths/~1v2~1proxy/post/parameters/1'
          x-miro: ./core/headers.yml#/skypathApp
      requestBody:
        description: Login params
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoginRequest'
      responses:
        '200':
          description: OK - User was authenticated
          content:
            application/json:
              schema:
                oneOf:
                  - type: object
                    properties:
                      token:
                        type: string
                        example: eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ1c2VyTmFtZSI6ImUwMTAxMDEiLCJyb2xlIjoiYWRtaW4iLCJjb21wYW55IjoiWWFtYXNlZSIsImNvbXBhbnlJbnRlcm5hbElkIjoiWVMiLCJpYXQiOjE1NzM1NzM3MDQsImV4cCI6MTYwNTEwOTcwNH0.R9S2BOVpRx6H9_0lZWKqRg93kgYweR3kN3OZonHQY4w
                      refresh_token:
                        type: string
                        example: R9S2BOVpRx6H9_0lZWKqRg93kgYweR3kN3OZonHQY4w
                      user_id:
                        type: string
                        example: ym0565666
                      role:
                        type: string
                        example: pilot
                      company:
                        type: string
                        example: united airlines
                      company_id:
                        type: string
                        example: UA
                      first_name:
                        type: string
                        example: John
                      last_name:
                        type: string
                        example: Baker
                      email:
                        type: string
                        example: john.baker@skypathapi.com
                  - type: object
                    properties:
                      otp_token:
                        type: string
                        example: eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ1aWQiOiJ5b3NzaWZyYW5jZXMiLCJpYXQiOjE1OTg1MTUyMzUsImV4cCI6MTU5ODUxNTgzNX0.nbe4uPeFHwSWiv0_TWCtyRErxTk_KvmhTVp14vBLZVA
                  - type: object
                    properties:
                      sso_url:
                        type: string
                        example: 'https://domain.com/sso?token=abcd'
                      timeouts:
                        type: object
                        properties:
                          session:
                            type: number
                            example: 120
                          idle:
                            type: number
                            example: 600
        '401':
          description: Api-key or supplied jwt token wrong / expired or user doesn't have permissions to login
          content:
            application/json:
              schema:
                type: object
                required:
                  - message
                properties:
                  code:
                    type: integer
                    format: int32
                  message:
                    type: string
  /v2/otp_request:
    post:
      tags:
        - auth
      operationId: otp_request
      description: Request a new OTP code for uninitialized user
      parameters:
        - $ref: '#/paths/~1v2~1proxy/post/parameters/0'
          x-miro: ./core/headers.yml#/skypathSDK
        - $ref: '#/paths/~1v2~1proxy/post/parameters/1'
          x-miro: ./core/headers.yml#/skypathApp
      requestBody:
        description: OTP request params
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OTPRequest'
      responses:
        '200':
          description: OK - OTP sent
          content:
            application/json:
              schema:
                type: object
                properties:
                  otp_sent:
                    type: boolean
                    example: true
        '401':
          $ref: '#/paths/~1v2~1login/post/responses/401'
          x-miro: responses.yml#/Unauthorized
  /v2/otp_validate:
    post:
      tags:
        - auth
      operationId: otp_validate
      description: Validate OTP code
      parameters:
        - $ref: '#/paths/~1v2~1proxy/post/parameters/0'
          x-miro: ./core/headers.yml#/skypathSDK
        - $ref: '#/paths/~1v2~1proxy/post/parameters/1'
          x-miro: ./core/headers.yml#/skypathApp
      requestBody:
        description: OTP validation params
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OTPValidationRequest'
      responses:
        '200':
          description: OK - OTP code is valid
          content:
            application/json:
              schema:
                type: object
                properties:
                  set_profile_token:
                    type: string
                    example: eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ1aWQiOiJ5b3NzaWZyYW5jZXMiLCJpYXQiOjE1OTg1MTUyMzUsImV4cCI6MTU5ODUxNTgzNX0.nbe4uPeFHwSWiv0_TWCtyRErxTk_KvmhTVp14vBLZVA
        '401':
          $ref: '#/paths/~1v2~1login/post/responses/401'
          x-miro: responses.yml#/Unauthorized
  /v2/partner_login:
    post:
      tags:
        - auth
      operationId: partner_login
      description: |
        Login to the server and get a authorization JWT token, this allows partners to 
        exchange their API_KEY and customer user_id for a JWT token which can be user in 
        further requests. All requests that need this token are marked as such in this
        documentation
      parameters:
        - $ref: '#/paths/~1v2~1proxy/post/parameters/0'
          x-miro: ./core/headers.yml#/skypathSDK
        - $ref: '#/paths/~1v2~1proxy/post/parameters/1'
          x-miro: ./core/headers.yml#/skypathApp
      security:
        - apiKey: []
      requestBody:
        description: Login params
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PartnerLoginRequest'
      responses:
        '200':
          description: OK - User was authenticated
          content:
            application/json:
              schema:
                $ref: '#/paths/~1v2~1login/post/responses/200/content/application~1json/schema/oneOf/0'
                x-miro: types.yml#/LoginResponse
        '401':
          $ref: '#/paths/~1v2~1login/post/responses/401'
          x-miro: responses.yml#/Unauthorized
        '404':
          $ref: '#/paths/~1v2~1forgot_password/post/responses/404'
          x-miro: responses.yml#/UserNotFound
        '500':
          $ref: '#/paths/~1v2~1set_user_profile/post/responses/500'
          x-miro: responses.yml#/InternalServerError
  /v2/refresh_token:
    post:
      operationId: refresh_token
      tags:
        - auth
      description: |
        Each recived JWT token when using login has an expiry time of 3 hours, when the client
        gets an error the token expired or even before the event of the token expiring, 
        the client can call this route with the correct refresh token recived on the login route
        and get new fresh JWT token.
      parameters:
        - $ref: '#/paths/~1v2~1proxy/post/parameters/0'
          x-miro: ./core/headers.yml#/skypathSDK
        - $ref: '#/paths/~1v2~1proxy/post/parameters/1'
          x-miro: ./core/headers.yml#/skypathApp
      responses:
        '200':
          description: OK - new token generated
          content:
            application/json:
              schema:
                type: object
                required:
                  - new_token
                properties:
                  new_token:
                    description: new JWT token with new expiry of 3 hours
                    example: eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ1c2VyTmFtZSI6ImUwMTAxMDEiLCJyb2xlIjoiYWRtaW4iLCJjb21wYW55IjoiWWFtYXNlZSIsImNvbXBhbnlJbnRlcm5hbElkIjoiWVMiLCJpYXQiOjE1NzM1NzM3MDQsImV4cCI6MTYwNTEwOTcwNH0.R9S2BOVpRx6H9_0lZWKqRg93kgYweR3kN3OZonHQY4w
                    type: string
                  new_refresh_token:
                    description: optional new refresh token in case server replaces refresh token
                    example: Jyb2xlIjoiYWRtaW4iLCJjb21wYW55IjoiWWFtYXNlZSIsImNvbXBhbnlJ93kgYweR3kN3OZonHQY4w
                    type: string
        '401':
          description: The refresh token is not authorized or invalid
          content:
            application/json:
              schema:
                type: object
                required:
                  - message
                properties:
                  code:
                    type: integer
                    format: int32
                  message:
                    type: string
        '404':
          $ref: '#/paths/~1v2~1settings/get/responses/404'
          x-miro: responses.yml#/NotFound
        '500':
          $ref: '#/paths/~1v2~1set_user_profile/post/responses/500'
          x-miro: responses.yml#/InternalServerError
      requestBody:
        description: JWT refresh token
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - token
                - user_id
              properties:
                user_id:
                  type: string
                  description: The user_id or the requesting user
                token:
                  type: string
                  description: The refresh token the client recived on login
  /v2/partner_refresh_token:
    post:
      operationId: partner_refresh_token
      tags:
        - auth
      security:
        - apiKey: []
      description: |
        The recived JWT token when using partner login has an expiry time of 3 hours, when the client
        gets an error the token expired or even before the event of the token expiring, 
        the client can call this route with the correct refresh token recived on the login route
        and get new fresh JWT token. Only good for refreshing tokens recived with partner_login
      parameters:
        - $ref: '#/paths/~1v2~1proxy/post/parameters/0'
          x-miro: ./core/headers.yml#/skypathSDK
        - $ref: '#/paths/~1v2~1proxy/post/parameters/1'
          x-miro: ./core/headers.yml#/skypathApp
      responses:
        '200':
          description: OK - new token generated
          content:
            application/json:
              schema:
                $ref: '#/paths/~1v2~1refresh_token/post/responses/200/content/application~1json/schema'
                x-miro: types.yml#/RefreshTokenResponse
        '401':
          $ref: '#/paths/~1v2~1refresh_token/post/responses/401'
          x-miro: responses.yml#/InvalidRefreshToken
        '404':
          $ref: '#/paths/~1v2~1settings/get/responses/404'
          x-miro: responses.yml#/NotFound
        '500':
          $ref: '#/paths/~1v2~1set_user_profile/post/responses/500'
          x-miro: responses.yml#/InternalServerError
      requestBody:
        description: JWT refresh partner token
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PartnerRefreshTokenRequest'
  /v2/delivery_token:
    get:
      tags:
        - map
      security:
        - bearerAuth: []
      operationId: delivery_token
      description: |
        The client needs to call this to get a valid CDN delivery key to be able
        to get initial state and periodic updates or the world map
      parameters:
        - $ref: '#/paths/~1v2~1proxy/post/parameters/0'
          x-miro: ./core/headers.yml#/skypathSDK
        - $ref: '#/paths/~1v2~1proxy/post/parameters/1'
          x-miro: ./core/headers.yml#/skypathApp
      responses:
        '200':
          description: OK - returns a valid delivery key
          content:
            application/json:
              schema:
                type: object
                required:
                  - delivery_token
                  - expires
                properties:
                  delivery_token:
                    description: use this token in the /updates /initial routes
                    example: Jyb2xlIjoiYWRtaW4iLCJjb21wYW55IjoiWWFtYXNlZSIsImNvbXBhbnlJ93kgYweR3kN3OZonHQY4w
                    type: string
                  expires:
                    description: when the token expires
                    example: 15566666606
                    type: integer
        '401':
          $ref: '#/paths/~1v2~1login/post/responses/401'
          x-miro: responses.yml#/Unauthorized
        '404':
          $ref: '#/paths/~1v2~1settings/get/responses/404'
          x-miro: responses.yml#/NotFound
        '500':
          $ref: '#/paths/~1v2~1set_user_profile/post/responses/500'
          x-miro: responses.yml#/InternalServerError
  '/v2/initial/{company_id}/{aircraft_type}/{hours}/{delivery_token}/{delivery_token_expiry}':
    get:
      tags:
        - map
      operationId: initial
      description: |
        Get an initial world view of the turbulence and traffic of all aircrafts according 
        to the user permissions, client or app should call this when initializing of after 
        a period of no connectivity (max 5 minutes) to re-init it's internal memory to the 
        current state. When network connectivity is stable the app should call the /update 
        routes to get only the diff from the last update every minute or so.
      parameters:
        - $ref: '#/paths/~1v2~1proxy/post/parameters/0'
          x-miro: ./core/headers.yml#/skypathSDK
        - $ref: '#/paths/~1v2~1proxy/post/parameters/1'
          x-miro: ./core/headers.yml#/skypathApp
        - in: path
          name: company_id
          schema:
            type: string
          required: true
          description: Internal Company Id
        - in: path
          name: aircraft_type
          schema:
            type: string
          required: true
          description: Type of aircraft client is flying
        - in: path
          name: hours
          schema:
            type: integer
          required: true
          description: Number of hours back for turbulence reports
        - in: path
          name: delivery_token
          schema:
            type: string
          required: true
          description: Delivery token recived in /delivery_token
        - in: path
          name: delivery_token_expiry
          schema:
            type: integer
          required: true
          description: Delivery token expiration as recived in /delivery_token_expiry
      responses:
        '200':
          description: OK - returns the world map turbulences and traffic for the last 6 hours
          content:
            application/json:
              schema:
                type: object
                properties:
                  skypath_tick:
                    description: 'describes the current system virtual clock tick, used for partial updates'
                    type: integer
                  hours:
                    description: how many hours back data included
                    type: integer
                  updates:
                    type: object
                    properties:
                      positions:
                        type: array
                        items:
                          type: object
                          properties:
                            uuid:
                              description: unique ID for this plane generated by the server can be used to identify specific plane and diff between updates
                              type: string
                            alt:
                              description: altitude of plane in tiles
                              type: integer
                            tile_x:
                              description: position in x axis tiles
                              type: integer
                            tile_y:
                              description: position in y axis tiles
                              type: integer
                            speed:
                              description: speed in knots
                              type: integer
                            ts:
                              description: unix epoch time stamp of update
                              type: integer
                            hdg:
                              description: plane heading
                              type: integer
                            lat:
                              description: position latitude
                              type: number
                            lon:
                              description: position longitude
                              type: number
                          example:
                            uuid: 46087afaeb79d682820fe604bc8a075c
                            alt: 12
                            tile_x: 1023
                            tile_y: 304
                            speed: 12
                            ts: 1577349257
                            hdg: 209
                            lat: 44.55719190061772
                            lon: 16.962290836610837
                      turbulences:
                        type: array
                        items:
                          type: object
                          properties:
                            alt:
                              description: alt in tiles
                              type: number
                            tileX:
                              description: tileX of report
                              type: number
                            tileY:
                              description: tileY of report
                              type: number
                            sev:
                              description: severity level
                              type: number
                            tick:
                              description: skypath system virtual tick at time of report
                              type: number
                            ts:
                              description: unix epoch
                              type: number
                      weather_events:
                        type: array
                        items:
                          type: object
                          properties:
                            tileX:
                              description: tileX of the event
                              type: integer
                            tileY:
                              description: tileY of the event
                              type: integer
                            alt:
                              description: alt of the event
                              type: integer
                            ts:
                              description: unix epoch time stamp of update
                              type: integer
                            type:
                              description: 'event type , ''cb'' , ''icing'',''shear'',''lightning'''
                              type: string
                            fNum:
                              description: Flight number
                              type: string
                          example:
                            alt: 12
                            tileX: 1023
                            tileY: 304
                            ts: 1577349257
                            type: cb
                            fNum: LY001
                example:
                  skypath_tick: 4567
                  updates:
                    turbulences:
                      - alt: 34
                        tileX: 1020
                        tileY: 681
                        sev: 2
                        ts: 1574057162
                      - alt: 35
                        tileX: 1019
                        tileY: 680
                        sev: 1
                        ts: 1574057163
                    positions:
                      - uuid: eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9
                        alt: 24695.00122597656
                        hdg: 235.8984375
                        lat: 59.61784533711745
                        lng: -38.32425758432409
                        speed: 269.04998779296875
                        ts: 1574057471
                    weather_events:
                      - alt: 34
                        tileX: 1020
                        tileY: 681
                        type: cb
                        ts: 1574057162
                      - alt: 35
                        tileX: 1019
                        tileY: 680
                        type: shear
                        ts: 1574057163
        '401':
          $ref: '#/paths/~1v2~1login/post/responses/401'
          x-miro: responses.yml#/Unauthorized
        '404':
          $ref: '#/paths/~1v2~1settings/get/responses/404'
          x-miro: responses.yml#/NotFound
        '500':
          $ref: '#/paths/~1v2~1set_user_profile/post/responses/500'
          x-miro: responses.yml#/InternalServerError
  '/v2/updates/{company_id}/{aircraft_type}/{skypath_tick}/{delivery_token}/{delivery_token_expiry}':
    get:
      tags:
        - map
      operationId: updates
      description: |
        Returns updates since and including "skypath tick" to client, client calls this route 
        every minute or so to stay in sync with the system updates of traffic positions and 
        turbulence data
      parameters:
        - $ref: '#/paths/~1v2~1proxy/post/parameters/0'
          x-miro: ./core/headers.yml#/skypathSDK
        - $ref: '#/paths/~1v2~1proxy/post/parameters/1'
          x-miro: ./core/headers.yml#/skypathApp
        - in: path
          name: company_id
          schema:
            type: string
            example: UA
          required: true
          description: Internal Company Id
        - in: path
          name: aircraft_type
          schema:
            type: string
            example: '737'
          required: true
          description: Type of aircraft client is flying
        - in: path
          name: skypath_tick
          schema:
            type: integer
            example: '708695'
          required: true
          description: last Skypath tick you got in the last succesfull get /update
        - in: path
          name: delivery_token
          schema:
            type: string
            example: aa
          required: true
          description: Delivery token recived in /delivery_token
        - in: path
          name: delivery_token_expiry
          schema:
            type: integer
            example: 1454655656
          required: true
          description: Delivery token expiration as recived in /delivery_token_expiry
      responses:
        '200':
          description: Updates to the map since and including skypath tick
          content:
            application/json:
              schema:
                type: object
                properties:
                  skypath_tick:
                    type: integer
                  updates:
                    type: object
                    properties:
                      positions:
                        type: array
                        items:
                          type: object
                          properties:
                            uuid:
                              description: unique ID for this plane generated by the server can be used to identify specific plane and diff between updates
                              type: string
                            alt:
                              description: altitude of plane in tiles
                              type: integer
                            tile_x:
                              description: position in x axis tiles
                              type: integer
                            tile_y:
                              description: position in y axis tiles
                              type: integer
                            speed:
                              description: speed in knots
                              type: integer
                            ts:
                              description: unix epoch time stamp of update
                              type: integer
                            hdg:
                              description: plane heading
                              type: integer
                            lat:
                              description: position latitude
                              type: number
                            lon:
                              description: position longitude
                              type: number
                          example:
                            uuid: 46087afaeb79d682820fe604bc8a075c
                            alt: 12
                            tile_x: 1023
                            tile_y: 304
                            speed: 12
                            ts: 1577349257
                            hdg: 209
                            lat: 44.55719190061772
                            lon: 16.962290836610837
                      turbulences:
                        type: array
                        items:
                          type: object
                          properties:
                            alt:
                              description: alt in tiles
                              type: number
                            tileX:
                              description: tileX of report
                              type: number
                            tileY:
                              description: tileY of report
                              type: number
                            sev:
                              description: severity level
                              type: number
                            tick:
                              description: skypath system virtual tick at time of report
                              type: number
                            ts:
                              description: unix epoch
                              type: number
                      weather_events:
                        type: array
                        items:
                          type: object
                          properties:
                            tileX:
                              description: tileX of the event
                              type: integer
                            tileY:
                              description: tileY of the event
                              type: integer
                            alt:
                              description: alt of the event
                              type: integer
                            ts:
                              description: unix epoch time stamp of update
                              type: integer
                            type:
                              description: 'event type , ''cb'' , ''icing'',''shear'',''lightning'''
                              type: string
                            fNum:
                              description: Flight number
                              type: string
                          example:
                            alt: 12
                            tileX: 1023
                            tileY: 304
                            ts: 1577349257
                            type: cb
                            fNum: LY001
                example:
                  skypath_tick: 4567
                  updates:
                    turbulences:
                      - alt: 34
                        tileX: 1020
                        tileY: 681
                        sev: 2
                        tick: 76
                        ts: 1574057162
                      - alt: 35
                        tileX: 1019
                        tileY: 680
                        sev: 1
                        tick: 76
                        ts: 1574057163
                    positions:
                      - airplane: '737'
                        alt: 24695.00122597656
                        hdg: 235.8984375
                        lat: 59.61784533711745
                        lng: -38.32425758432409
                        speed: 269.04998779296875
                        ts: 1574057471
                        uuid: eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9
                    weather_events:
                      - alt: 34
                        tileX: 1020
                        tileY: 681
                        type: cb
                        tick: 78
                        ts: 1574057162
                      - alt: 35
                        tileX: 1019
                        tileY: 680
                        tick: 78
                        type: shear
                        ts: 1574057163
        '401':
          $ref: '#/paths/~1v2~1login/post/responses/401'
          x-miro: responses.yml#/Unauthorized
        '404':
          $ref: '#/paths/~1v2~1settings/get/responses/404'
          x-miro: responses.yml#/NotFound
        '500':
          $ref: '#/paths/~1v2~1set_user_profile/post/responses/500'
          x-miro: responses.yml#/InternalServerError
  /v2/updates/:
    post:
      tags:
        - map
      operationId: updates
      description: |
        Client POSTs updates of aircraft position and new turbulence discovered to server every minute or so
      parameters:
        - $ref: '#/paths/~1v2~1proxy/post/parameters/0'
          x-miro: ./core/headers.yml#/skypathSDK
        - $ref: '#/paths/~1v2~1proxy/post/parameters/1'
          x-miro: ./core/headers.yml#/skypathApp
      security:
        - bearerAuth: []
      responses:
        '200':
          description: OK - Updates were recived by the server
        '207':
          description: Some of the update was successful some not see code and message for more details
          content:
            application/json:
              schema:
                type: object
                required:
                  - message
                properties:
                  code:
                    type: integer
                    format: int32
                  message:
                    type: string
        '401':
          $ref: '#/paths/~1v2~1login/post/responses/401'
          x-miro: responses.yml#/Unauthorized
        '404':
          $ref: '#/paths/~1v2~1settings/get/responses/404'
          x-miro: responses.yml#/NotFound
        '500':
          $ref: '#/paths/~1v2~1set_user_profile/post/responses/500'
          x-miro: responses.yml#/InternalServerError
      requestBody:
        description: The objects to send from client to server with what changed
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateRequestBody'
  '/v2/positions/{company_id}/{delivery_token}/{delivery_token_expiry}:':
    get:
      tags:
        - map
      operationId: positions
      description: |
        Client get update of all aircrafts positions, can be used for higher frequency traffic updates map if app doesn't support animations or DR positions
      parameters:
        - $ref: '#/paths/~1v2~1proxy/post/parameters/0'
          x-miro: ./core/headers.yml#/skypathSDK
        - $ref: '#/paths/~1v2~1proxy/post/parameters/1'
          x-miro: ./core/headers.yml#/skypathApp
        - in: path
          name: company_id
          schema:
            type: string
            example: UA
          required: true
          description: Internal Company Id
        - in: path
          name: delivery_token
          schema:
            type: string
            example: aa
          required: true
          description: Delivery token recived in /delivery_token
        - in: path
          name: delivery_token_expiry
          schema:
            type: integer
            example: 1454655656
          required: true
          description: Delivery token expiration as recived in /delivery_token_expiry
      responses:
        '200':
          description: OK - World map of positions for all aircrafts
          content:
            application/json:
              schema:
                type: object
                properties:
                  positions:
                    type: array
                    items:
                      type: object
                      properties:
                        uuid:
                          description: unique ID for this plane generated by the server can be used to identify specific plane and diff between updates
                          type: string
                        alt:
                          description: altitude of plane in tiles
                          type: integer
                        tile_x:
                          description: position in x axis tiles
                          type: integer
                        tile_y:
                          description: position in y axis tiles
                          type: integer
                        speed:
                          description: speed in knots
                          type: integer
                        ts:
                          description: unix epoch time stamp of update
                          type: integer
                        hdg:
                          description: plane heading
                          type: integer
                        lat:
                          description: position latitude
                          type: number
                        lon:
                          description: position longitude
                          type: number
                      example:
                        uuid: 46087afaeb79d682820fe604bc8a075c
                        alt: 12
                        tile_x: 1023
                        tile_y: 304
                        speed: 12
                        ts: 1577349257
                        hdg: 209
                        lat: 44.55719190061772
                        lon: 16.962290836610837
        '401':
          $ref: '#/paths/~1v2~1login/post/responses/401'
          x-miro: responses.yml#/Unauthorized
        '404':
          $ref: '#/paths/~1v2~1settings/get/responses/404'
          x-miro: responses.yml#/NotFound
        '500':
          $ref: '#/paths/~1v2~1set_user_profile/post/responses/500'
          x-miro: responses.yml#/InternalServerError
components:
  securitySchemes:
    bearerAuth:
      type: apiKey
      name: x-access-token
      description: JWT non expired token recived in response to a successful login request
      in: header
    apiKey:
      type: apiKey
      name: api-key
      description: 'API key to authorize requests. If you don''t have a Skypath API key, contact Yamasee support'
      in: header
  schemas:
    ProxyRequest:
      description: Options for proxy request
      type: object
      properties:
        url:
          type: string
        method:
          type: string
          enum:
            - get
            - post
            - delete
            - patch
            - put
        responseType:
          type: string
          enum:
            - json
            - stream
        data:
          type: object
          format: json
        headers:
          type: object
          format: json
    MetadataByIdResponse:
      type: object
      properties:
        tag:
          description: Tag with file details
          type: object
        uuid:
          description: Unique id for raw data file
          type: string
        user_id:
          description: Creator user
          type: string
        url:
          description: Url to download raw data file
          type: string
    UploadRawDataRequest:
      description: Actual file upload
      type: object
      properties:
        file:
          type: string
          format: binary
        metadata:
          type: object
          format: json
          properties:
            start_ts:
              type: number
            end_ts:
              type: number
            flight_num:
              type: string
            label:
              type: string
            user_response:
              type: object
              properties:
                confirmed:
                  type: boolean
                suggested_level:
                  type: number
    CreateStaticContentRequest:
      description: Actual file upload
      type: object
      properties:
        thefile:
          type: string
          format: binary
    ContactRequest:
      description: Body for user contact send message
      type: object
      required:
        - messagee
      properties:
        message:
          description: text message the user wants to send
          type: string
        email:
          description: the users email
          type: string
    ForgotPasswordRequest:
      description: Body for frogot password request
      type: object
      required:
        - user_id
      properties:
        user_id:
          description: user name or email or requesting user
          type: string
    PartnerLoginRequest:
      description: Body for partner login request
      type: object
      required:
        - user_id
        - company_id
      properties:
        user_id:
          type: string
        company_id:
          type: string
    PartnerRefreshTokenRequest:
      description: Body for partner login request
      type: object
      required:
        - token
        - user_id
        - company_id
      properties:
        token:
          type: string
          description: The refresh token the client recived on login
        user_id:
          type: string
          description: The user_id or the requesting user
        company_id:
          type: string
          description: The company id for the requesting user
    OTPValidationRequest:
      description: Body for OTP validation
      type: object
      required:
        - otp
        - token
      properties:
        otp:
          description: the OTP code
          type: string
        token:
          description: the token received from the login request
          type: string
    OTPRequest:
      description: Body for OTP request
      type: object
      required:
        - token
      properties:
        token:
          description: the token received from the login request
          type: string
    LoginRequest:
      description: Body for login request
      type: object
      required:
        - user_id
        - password
      properties:
        user_id:
          description: user id or email of user that logs in
          type: string
        password:
          description: clear text password
          type: string
    UserProfileUpdateRequest:
      description: Body for user profile update request
      type: object
      required:
        - token
        - password
      properties:
        password:
          description: new chosen password
          type: string
        token:
          description: the token received from the OTP validation request
          type: string
    UpdateRequestBody:
      description: Update request body
      type: object
      properties:
        events:
          description: App Events that happened since last update
          $ref: '#/components/schemas/Events'
        turbulences:
          description: Turbulence Events that happened since last update
          $ref: '#/components/schemas/Turbulences'
        position:
          description: Position of the aircraft
          $ref: '#/components/schemas/Position'
        weather_events:
          description: Weather Events
          $ref: '#/components/schemas/WeatherEvents'
    WeatherEvents:
      description: Weather Events Array
      type: array
      items:
        $ref: '#/components/schemas/WeatherEvent'
    WeatherEvent:
      description: Body for weathr event
      allOf:
        - type: object
          required:
            - tileX
            - tileY
            - alt
            - ts
            - fNum
            - type
          properties:
            tileX:
              description: turbulence tile x
              example: 1404
              type: integer
            tileY:
              description: turbulence tile y
              example: 30
              type: integer
            alt:
              description: alt in tiles
              example: 12
              type: integer
            ts:
              description: timestamp (unix epoch)
              example: 140454545
              type: integer
            type:
              description: 'Weather type ''cb'' , ''icing'',''shear'',''lightning'''
              example: cb
              type: string
            fNum:
              description: Flight Number
              example: LY001
              type: string
    Events:
      description: Events Array
      type: array
      items:
        $ref: '#/components/schemas/Event'
    Event:
      description: Body for event
      allOf:
        - type: object
          required:
            - ts
            - type
            - meta
          properties:
            ts:
              description: timestamp (unix epoch)
              example: 140454545
              type: integer
            type:
              description: type of events
              example: NO_GPS
              type: string
            meta:
              description: Additional info about the event
              example:
                size: 8
              type: object
    Turbulences:
      description: Turbulences Array
      type: array
      items:
        $ref: '#/components/schemas/Turbulence'
    Turbulence:
      description: Body for turbulence event
      allOf:
        - type: object
          required:
            - tileX
            - tileY
            - alt
            - lat
            - lng
            - altitude
            - airplane
            - fNum
            - ts
            - sev
          properties:
            tileX:
              description: turbulence tile x
              example: 1404
              type: integer
            tileY:
              description: turbulence tile y
              example: 30
              type: integer
            alt:
              description: alt in tiles
              example: 12
              type: integer
            airplane:
              description: airplane type
              example: '737'
              type: string
            fNum:
              description: flight id
              example: LY001
              type: string
            ts:
              description: timestamp (unix epoch)
              example: 140454545
              type: integer
            sev:
              description: severity of turbulence
              example: 3
              type: integer
            lat:
              description: GPS latitude
              example: 102.135769726563
              type: number
            lng:
              description: GPS longitude
              example: 22.135769726563
              type: number
            altitude:
              description: GPS altitude
              example: 34056
              type: number
    Position:
      description: Aircraft Position
      allOf:
        - type: object
          required:
            - lat
            - lng
            - alt
            - hdg
            - speed
            - fNum
            - airplane
            - uuid
          properties:
            lat:
              description: latitude
              example: 102.135769726563
              type: number
            lng:
              description: lontitude
              example: -78.5674656566
              type: number
            alt:
              description: altitude of aircraft
              example: 10232.135769726563
              type: number
            hdg:
              description: aircraft heading
              example: 43.2421875
              type: number
            speed:
              description: aircraft speed
              example: 146.2100067138672
              type: number
            fNum:
              description: flight id
              example: LY001
              type: string
            airplane:
              description: aircraft type
              example: '737'
              type: string
            uuid:
              description: unique client identifier
              example: x4534dxc
              type: string
